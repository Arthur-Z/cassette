<?xml version="1.0"?>
<Project DefaultTargets="Default" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">    
    <Import Project="Cassette.targets" />
    <PropertyGroup>
        <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    </PropertyGroup>
    <ItemGroup>
        <!-- Only need to build test projects as dependent projects will be automatically built. -->
        <ProjectName Include="UnitTests"/>
        <ProjectName Include="Views.UnitTests"/>
        <ProjectName Include="Aspnet.UnitTests"/>
        <ProjectName Include="MSBuild.UnitTests"/>
        <ProjectName Include="CoffeeScript.UnitTests"/>
        <ProjectName Include="Less.UnitTests"/>
        <ProjectName Include="Sass.UnitTests" Condition=" '$(Configuration)' != 'ReleaseNET35' "/>
        <ProjectName Include="Hogan.UnitTests"/>
        <ProjectName Include="Aspnet.Jasmine.UnitTests"/>
        <ProjectName Include="IntegrationTests"/>
    </ItemGroup>
    <ItemGroup>
        <NugetProject Include="Cassette"/>
        <NugetProject Include="Cassette.Aspnet"/>
        <NugetProject Include="Cassette.Views"/>
        <NugetProject Include="Cassette.MSBuild"/>
        <NugetProject Include="Cassette.Less"/>
        <NugetProject Include="Cassette.Sass"/>
        <NugetProject Include="Cassette.CoffeeScript"/>
        <NugetProject Include="Cassette.Hogan"/>
        <NugetProject Include="Cassette.JQueryTmpl"/>
        <NugetProject Include="Cassette.KnockoutJQueryTmpl"/>
        <NugetProject Include="Cassette.Aspnet.Jasmine"/>
    </ItemGroup>

    <Target Name="Default" DependsOnTargets="Test;NugetPack"></Target>

    <Target Name="Build">
        <MSBuild
            Projects="src\Cassette.%(ProjectName.Identity)\Cassette.%(ProjectName.Identity).csproj"
            Targets="Clean;Build"
            Properties="Configuration=$(Configuration)"/>
    </Target>
    
    <Target Name="Test" DependsOnTargets="Build">
        <!-- Run tests against 4.0 and 3.5 assemblies; must use CLR4 and 2.0 XUnit otherwise some 3.5 tests will fail -->
        <Exec Command="tools\xunit.console.clr4.x86.exe src\Cassette.%(ProjectName.Identity)\bin\$(Configuration)\Cassette.%(ProjectName.Identity).dll" />
    </Target>

    <Target Name="NugetPack" DependsOnTargets="Build">
        <ItemGroup>
            <ExistingPackageFiles Include="build\nuget\*"/>
            <Transforms Include="src\**\*.nutrans" />
        </ItemGroup>        
        <PropertyGroup>
            <OutputDir>build\nuget</OutputDir>
        </PropertyGroup>

        <!-- Get shared assembly version -->
        <GetAssemblyInformationalVersion Assembly="src\Cassette\bin\$(Configuration)\Cassette.dll">
            <Output PropertyName="Version" TaskParameter="Version" />
        </GetAssemblyInformationalVersion>

        <Message Text="Building Nuget packages for v$(Version)" />

        <Delete Files="@(ExistingPackageFiles)"/>

        <!-- Transform Nuspecs -->
        <TransformXmlHierarchy
            Source="%(Transforms.Identity)"
            Destination="src\%(Transforms.RecursiveDir)%(Transforms.Filename).nuspec"
            TaskDirectory="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v10.0\Web\" />

        <MakeDir Directories="$(OutputDir)"/>
        <Exec Command="nuget pack src\%(NugetProject.Identity)\%(NugetProject.Identity).nuspec -Version $(Version) -OutputDirectory $(OutputDir)"/>
        <Exec Command="nuget pack src\%(NugetProject.Identity)\%(NugetProject.Identity).symbols.nuspec -Version $(Version) -Symbols -OutputDirectory $(OutputDir)"/>
    </Target>

    <Target Name="NugetPush" DependsOnTargets="NugetPack">
        <ItemGroup>
            <Packages Include="build\nuget\*.nupkg" Exclude="build\nuget\*.symbols.nupkg"/>
        </ItemGroup>
        <Exec Command="nuget push %(Packages.Identity)" />
    </Target>

    <Target Name="Zip35" DependsOnTargets="Test35">
        <!-- TODO: Until we can multi-target within Nuget easily, we are packaging Fx35 as a zip file for release -->
        <ItemGroup>
            <Binary Include="src\Cassette\bin\Release-FX35\Cassette.dll" />
            <Binary Include="src\Cassette.Views\bin\Release-FX35\Cassette.Views.dll" />
            <Binary Include="src\Cassette.Aspnet\bin\Release-FX35\Cassette.Aspnet.dll" />
            <Binary Include="src\Cassette\bin\Release-FX35\Iesi.Collections.dll" />
            <Content Include="src\Cassette.Aspnet\CassetteConfiguration.cs.pp" />
            <Content Include="src\Cassette.Aspnet\web.config.transform" />
            <Content Include="src\Cassette.Views\web.config.mvc2.transform" />
            <Root Include="license.txt" />
            <Root Include="readme_fx35.md" />
        </ItemGroup>

        <Copy SourceFiles="%(Binary.Identity)" DestinationFolder="build\Cassette.Fx35-$(Version)\lib35" />
        <Copy SourceFiles="%(Content.Identity)" DestinationFolder="build\Cassette.Fx35-$(Version)\content" />
        <Copy SourceFiles="%(Root.Identity)" DestinationFolder="build\Cassette.Fx35-$(Version)" />
        
        <!-- TODO: Zip the binaries -->
    </Target>
</Project>

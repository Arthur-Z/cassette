@{
    ViewBag.Title = "Assets and Modules";
}
<h1>Assets and modules</h1>
<p>An "asset" represents any static source file that is used client-side. For example, a JavaScript file, CSS file or HTML template.</p>
<p>Assets are grouped into "modules". The assets within a module are processed by a pipeline of steps to produce
the final output that is sent to the browser.</p>
<p>Therefore you are encouraged to have lots of small, maintainable, assets instead of monolithic files. Also delete
all the minified scripts from your project. Cassette will handle minification so these files are no longer needed.</p>
<p>Cassette has three types of module:</p>
<ul>
    <li><a href="@Url.RouteUrl("Documentation", new { path = "scripts" })">Scripts</a></li>
    <li><a href="@Url.RouteUrl("Documentation", new { path = "stylesheets" })">Stylesheets</a></li>
    <li><a href="@Url.RouteUrl("Documentation", new { path = "html-templates" })">HTML Templates</a></li>
</ul>

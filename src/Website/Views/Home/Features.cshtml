@{
    ViewBag.Title = "Features";
    ViewBag.Section = "features";
}

<div class="main">
    <h1>Benefits</h1>
    <div class="content">
        
        <h2>Improve your website&rsquo;s Y-Slow score</h2>
        <p>A faster website means happier users and can even improve your business&rsquo;s bottom line. Cassette combines and minifies your assets into bundles. 
        This results in fewer HTTP requests, reducing page load time.</p>
        <p>Cassette bundles are served using the right HTTP caching headers and compressed to ensure optimal client download performance. 
        Bundle URLs include a hash of the contents, so a change file results in a new URL. Your users will never have to clear their browser cache again.</p>
        
        <h2>Organize your application, your way</h2>
        <p>Cassette&rsquo;s flexible configuration system lets you decide how to structure your assets. Use the simple, code-based API to define bundles by convention.</p>
        <p>The bundle processing pipeline is fully customizable. It provides full control over how bundles are combined, minified and rendered.</p>

        <h2>Create cleaner code, faster</h2>
        <p>Use awesome languages like CoffeeScript and LESS. Cassette will compile these into JavaScript and CSS. (SASS support coming soon!)</p>

        <h2>Auto-magic asset ordering</h2>
        <p>Don&rsquo;t waste time maintaining that ever growing file listing scripts in the right order. Be explicit about each files dependencies with handy reference 
        comments. Cassette will then determine the correct order for you.</p>
        <p>Alternatively, Cassette does offer a simple file format to explicitly order assets.</p>

        <h2>Simple &ldquo;in-page&rdquo; API</h2>
        <p>Reference the bundles your page view or partial requires using the simple Bundles helper class. Then tell Cassette where to render the HTML. 
        It will generate all the script and link elements for you.</p>
        <p>If you reference one bundle that requires another, Cassette knows to include both bundles in the generated HTML.</p>

        <h2>Easy Debugging &#38; Production Performance</h2>
        <p>Debugging your original JavaScript files is much easier compared to a minified monster! Proper filenames and line numbers let you find and fix 
        problems faster. In debug-mode Cassette puts each source asset into the page individually.</p>
        <p>With a single configuration change for production deployment, Cassette will generate the optimized bundle includes instead. This requires 
        absolutely no manual changes to your page source.</p>

        <h2>Manageable HTML Templates</h2>
        <p>Embedding HTML templates directly within a page is messy. Keeping each template in its own file makes projects much simpler to maintain. Let 
        Cassette handle the embedding for you.</p>
        <p>Cassette can even pre-compile the HTML templates into JavaScript for even faster client-side load times.</p>

    </div>
</div>

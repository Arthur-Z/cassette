//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.431
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cassette.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cassette.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * CoffeeScript Compiler v1.1.2
        /// * http://coffeescript.org
        /// *
        /// * Copyright 2011, Jeremy Ashkenas
        /// * Released under the MIT License
        /// */
        ///this.CoffeeScript=function(){function require(a){return require[a]}require[&quot;./helpers&quot;]=new function(){var a=this;(function(){var b,c;a.starts=function(a,b,c){return b===a.substr(c,b.length)},a.ends=function(a,b,c){var d;d=b.length;return b===a.substr(a.length-d-(c||0),d)},a.compact=function(a){var b,c,d,e;e=[];for(c=0,d=a.length;c&lt;d;c++)b=a[c],b&amp;&amp;e.push(b);return e},a.c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string coffeescript {
            get {
                return ResourceManager.GetString("coffeescript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var tags = {
        ///    &quot;tmpl&quot;: {
        ///        _default: { $2: &quot;null&quot; },
        ///        open: &quot;if($notnull_1){__=__.concat($item.nest($1,$2));}&quot;
        ///        // tmpl target parameter can be of type function, so use $1, not $1a (so not auto detection of functions)
        ///        // This means that {{tmpl foo}} treats foo as a template (which IS a function).
        ///        // Explicit parens can be used if foo is a function that returns a template: {{tmpl foo()}}.
        ///    },
        ///    &quot;wrap&quot;: {
        ///        _default: { $2: &quot;null&quot; },
        ///        open: &quot;$it [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jqueryTmplCompiler {
            get {
                return ResourceManager.GetString("jqueryTmplCompiler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //
        ///// LESS - Leaner CSS v1.1.4
        ///// http://lesscss.org
        ///// 
        ///// Copyright (c) 2009-2011, Alexis Sellier
        ///// Licensed under the Apache 2.0 License.
        /////
        ///(function (window, undefined) {
        ///    //
        ///    // Stub out `require` in the browser
        ///    //
        ///    function require(arg) {
        ///        return window.less[arg.split(&apos;/&apos;)[1]];
        ///    }
        ///
        ///
        ///    // ecma-5.js
        ///    //
        ///    // -- kriskowal Kris Kowal Copyright (C) 2009-2010 MIT License
        ///    // -- tlrobinson Tom Robinson
        ///    // dantman Daniel Friesen
        ///
        ///    //
        ///    // Arra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string less {
            get {
                return ResourceManager.GetString("less", resourceCulture);
            }
        }
    }
}
